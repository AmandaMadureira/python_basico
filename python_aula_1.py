# -*- coding: utf-8 -*-
"""Python - Aula 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-NxToe8DnV9_fQPWgSMjPOCH6HXU9NCw

Aula 1 - Python Básico - Fundação Bradesco

## Comando print()

O comando print() é utilizado quando desejamos imprimir alguma mensagem de texto na tela.
"""

print("Hello World")

"""Sintaxe da função print()

Esse texto deve ser escrito, também, entre aspas, podendo ser aspas simples ‘ ou dupla ‘’.

Variáveis
"""

codigo = 10
salario = 1500.00
nome = "Jose"
situacao = True

tipo = type(salario)

print(salario)
print(tipo)

codigo = 10
salario = 1500.00
nome = "Jose"

print("Código:" + str(codigo) + " Nome:" + str(nome) + " O salário atual é:" + str(salario))

codigo = 105
nome = "José Santana"
salario = 1650.00
ativo = True

print("Código: %d " % codigo)
print("Nome: %s " % nome)
print("Salário: %.2f " % salario)
print("Ativo: %r " % ativo)

"""Entrada de dados - input"""

fruta = input ("Digite o nome de uma fruta: ")
print(fruta)

"""Quando utilizamos a entrada de dados por meio da função input, essa será considerada do tipo string. Assim, caso seja necessário realizar a entrada de valores numéricos, temos de converter o tipo de dado, de acordo com o tipo que desejamos armazenar na variável."""

codigo = int(input("Digite o código do funcionário: "))
nome = input("Digite o nome do funcionário: ")
salario = float(input("Digite o valor do salário do funcionário: "))
ativo = True

print("Código: %d " % codigo)
print("Nome: %s " % nome)
print("Salário: %.2f " % salario)
print("Ativo: %r " % ativo)

"""Operadores lógicos"""

A = 5
B = 15
C = 20

print("A == B AND B > C : ", A == B and B > C)
print("A < B OR B > C : ", A < B or B > C)
print("NOT A == B : ", not A == B)

"""Indentação

Indentação é uma forma de arrumar o código, fazendo com que algumas linhas fiquem mais à direita que outras, à medida que adicionamos espaços em seu início.
"""

idade = int(input("Digite a idade da pessoa: "))

if idade >= 18:
    print("Maior de idade")
else:
    print("Menor de idade")

"""Por padrão, são usados quatro espaços em branco para definir a indentação.

Estrutura de decisão (if)
"""

A = input("Informe um valor para a variável A: ")
B = input("Informe um valor para a variável B: ")

if (A>B):
    aux = A;
    A = B;
    B = aux;

print("O valor da variável A agora é: ", A)
print("O valor da variável B agora é: ", B)

"""Estrutura de decisão (if and else)"""

notaA = float(input("Informe a primeira nota: "))
notaB = float(input("Informe a segunda nota: "))

#calcular_media
mediafinal = (notaA + notaB)/2

#verificacao

if mediafinal >= 7:
    print("A média: %.1f - Aprovado" % mediafinal)
else:
    print("A média: %.1f - Reprovado" % mediafinal)

"""Estrutura de decisão (elif)"""

idade = int(input("Digite a idade da pessoa: "))

if idade >= 18:
    print("Maior de idade")
elif idade >= 16:
    print("Infanto juvenil")
else:
    print("Menor de idade")

"""Estrutura de repetição (for)

Normalmente utilizamos a estrutura For quando sabemos quantas vezes o laço de programação deverá ser executado.
"""

for n in range(10):
    print(n)

for n in range(5, 16):
    print(n)

"""Também é possível utilizar o decremento no contador, dentro do comando range (ordem decrescente).


"""

for n in range(10, 0, -1):
    print(n)

"""Estrutura de repetição (while)

A estrutura While (enquanto), executa um determinado conjunto de instruções, enquanto a condição verificada no início permanecer verdadeira.
"""

x = 1
while x <= 15:
    print(x)
    x = x + 1

qtd = 0
soma = 0
media = 0
valor = float(input("Digite um valor: "))

while (valor > 0):
    soma = soma + valor
    qtd = qtd + 1

    # Entrada de valores

    valor = float(input("Digite um valor: "))

# caso digite um valor negativo o laço encerra (ex: -1)

media = soma / qtd
print("\n Total da soma: ", soma)
print("\n Quantidade de valores digitados: ", qtd)
print("\n Média dos valores: ", media)

"""Funções

Funções são estruturas que possibilitam a separação da programação em blocos.

A declaração de uma função é dividida em três partes: nome, parâmetros e corpo.
"""

def mensagem1 ():
    print("Hello World")


def mensagem2 ():
    return "Hello World"

mensagem1()

texto = mensagem2()
print(texto)

def Ler_notas():
    n = float(input("Digite a nota do aluno: "))
    return n


def resultado(n1,n2):
    media = (n1 + n2)/2
    print("Nota 1: ", n1)
    print("Nota 2: ", n2)
    print("Média: ", media, "Resultado: ", end = "")
    if media >= 7:
        print("Aprovado")
    else:
        print("Reprovado")


a = Ler_notas()
b = Ler_notas()
resultado(a,b)

"""Funções para manipulação de textos

Função open()

A função open() é utilizada para a abertura dos arquivos.
Após a declaração da variável que receberá a função, necessita de dois parâmetros: primeiramente o nome do arquivo e, depois, o modo como estamos abrindo esse arquivo.
"""

arquivo = open("arquivo.txt", "w")

"""Função write()

A função write() é utilizada para gravar informações em um arquivo existente.
"""

arquivo.write ("Curso Python n")
arquivo.write ("Aula Prática")

"""Função close()

A função close() é muito importante para encerrar o arquivo após sua utilização.

Atenção: Nunca abra o arquivo com a função open e depois o faça de novo, sem antes fechar a instância anterior.
"""

arquivo.close()

arquivo = open("ArqText.txt", "w")

arquivo.write("Curso Python \n")
arquivo.write("Aula Prática")
arquivo.close()

"""Função read()

A função read() realiza a leitura de todo conteúdo do arquivo.
"""

arquivo = open("ArqText.txt", "w")

arquivo.write("Curso Python \n")
arquivo.write("Aula Prática")
arquivo.close()

# leitura do arquivo texto

leitura = open("ArqText.txt", "r")
print(leitura.read())
leitura.close()

pi = 3.14
raio = 5
area = pi*raio
print(area)